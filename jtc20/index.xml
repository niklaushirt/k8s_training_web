<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JTC20 Kubernetes - Step by step on Kubernetes Training</title>
    <link>https://niklaushirt.github.io/k8s_training_web/jtc20/</link>
    <description>Recent content in JTC20 Kubernetes - Step by step on Kubernetes Training</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Sep 2020 09:12:06 +0200</lastBuildDate>
    
	<atom:link href="https://niklaushirt.github.io/k8s_training_web/jtc20/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lab 1: Build a container</title>
      <link>https://niklaushirt.github.io/k8s_training_web/jtc20/lab1/</link>
      <pubDate>Wed, 23 Sep 2020 09:12:06 +0200</pubDate>
      
      <guid>https://niklaushirt.github.io/k8s_training_web/jtc20/lab1/</guid>
      <description>Getting the sources First we need to assemble the elements that we will package in the container.
The minimum components you need to create a container:
 Code: already built application (jar, war, &amp;hellip;) or source (NodeJS, Java, Golang, â€¦) Dockerfile: Use the right base image for your app Configuration files if they exist  Copy   # Using the base image for NodeJS FROM node:8-stretch # Change working directory WORKDIR &amp;#34;/app&amp;#34; # Update packages and install dependency packages for services RUN apt-get update \ &amp;amp;&amp;amp; apt-get dist-upgrade -y \ &amp;amp;&amp;amp; apt-get clean \ &amp;amp;&amp;amp; echo &amp;#39;Finished installing dependencies&amp;#39; # Install npm production packages COPY package.</description>
    </item>
    
    <item>
      <title>Lab 2: A first Kubernetes Manifest</title>
      <link>https://niklaushirt.github.io/k8s_training_web/jtc20/lab2/</link>
      <pubDate>Wed, 23 Sep 2020 09:12:06 +0200</pubDate>
      
      <guid>https://niklaushirt.github.io/k8s_training_web/jtc20/lab2/</guid>
      <description>Basic structure of a deployment manifest Copy   apiVersion: apps/v1 kind: Deployment metadata: name: k8s-demo-deployment labels: app: k8s-demo spec: replicas: 3 selector: matchLabels: app: k8s-demo template: metadata: labels: app: k8s-demo spec: containers: - name: k8s-demo imagePullPolicy: Always image: niklaushirt/k8s-demo:1.0 ports: - containerPort: 80    Structural parts of a deployment manifest Deployment Copy   apiVersion: apps/v1 kind: Deployment metadata: name: k8s-demo-deployment labels: app: k8s-demo    ReplicaSet Copy   spec: replicas: 3 selector: matchLabels: app: k8s-demo    Pod Copy   template: metadata: labels: app: k8s-demo spec: containers: - name: k8s-demo imagePullPolicy: Always image: niklaushirt/k8s-demo:1.</description>
    </item>
    
    <item>
      <title>Lab 3: Import a new cluster</title>
      <link>https://niklaushirt.github.io/k8s_training_web/jtc20/lab3/</link>
      <pubDate>Wed, 23 Sep 2020 09:12:06 +0200</pubDate>
      
      <guid>https://niklaushirt.github.io/k8s_training_web/jtc20/lab3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lab 4: Deploy an application</title>
      <link>https://niklaushirt.github.io/k8s_training_web/jtc20/lab4/</link>
      <pubDate>Wed, 23 Sep 2020 09:12:06 +0200</pubDate>
      
      <guid>https://niklaushirt.github.io/k8s_training_web/jtc20/lab4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lab 5: Find resources on multiple clusters</title>
      <link>https://niklaushirt.github.io/k8s_training_web/jtc20/lab5/</link>
      <pubDate>Wed, 23 Sep 2020 09:12:06 +0200</pubDate>
      
      <guid>https://niklaushirt.github.io/k8s_training_web/jtc20/lab5/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>